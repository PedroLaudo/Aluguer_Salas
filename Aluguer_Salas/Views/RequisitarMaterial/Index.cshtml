@model Aluguer_Salas.Models.RequisicaoMaterial

@{
    string titulo = "Requisitar Material(ais)";
    string nomeSala = ViewBag.NomeSalaPendente as string;
    if (!string.IsNullOrEmpty(nomeSala))
    {
        titulo += $" para a Sala: {nomeSala}";
    }
    ViewData["Title"] = titulo;

    var materiaisParaJs = new List<object>();
    if (ViewBag.ListaMateriaisDisponiveis is SelectList selectList)
    {
        foreach (SelectListItem item in selectList)
        {
            materiaisParaJs.Add(new
            {
                Value = item.Value,
                Text = item.Text
            });
        }
    }
}

<head>
    <link rel="stylesheet" href="~/css/RequisitarMaterial.css" asp-append-version="true" />
</head>

<h2>@ViewData["Title"]</h2>
<hr />

<div class="requisitar-material-container">
    <div class="row">
        <div class="col-md-8">
            <form asp-action="Index" method="post">
                @Html.AntiForgeryToken()
                <div asp-validation-summary="All" class="text-danger mb-3"></div>

                @if (ViewBag.SalaIdPendente != null)
                {
                    <input type="hidden" name="salaIdPendenteInput" value="@ViewBag.SalaIdPendente" />
                }

                <div class="row mb-3">
                    <div class="col-md-4">
                        <label asp-for="DataRequisicao" class="form-label"></label>
                        <input asp-for="DataRequisicao" type="date" class="form-control" value="@Model.DataRequisicao.ToString("yyyy-MM-dd")" />
                        <span asp-validation-for="DataRequisicao" class="text-danger"></span>
                    </div>
                    <div class="col-md-4">
                        <label asp-for="HoraInicio" class="form-label"></label>
                        <input asp-for="HoraInicio" type="time" class="form-control" value="@Model.HoraInicio.ToString(@"hh\:mm")" />
                        <span asp-validation-for="HoraInicio" class="text-danger"></span>
                    </div>
                    <div class="col-md-4">
                        <label asp-for="HoraFim" class="form-label"></label>
                        <input asp-for="HoraFim" type="time" class="form-control" value="@Model.HoraFim.ToString(@"hh\:mm")" />
                        <span asp-validation-for="HoraFim" class="text-danger"></span>
                    </div>
                </div>

                <h4 class="mt-4">Itens da Requisição</h4>
                <div id="itens-container">
                    <!-- Primeira linha de item -->
                    <div class="row item-row mb-3 align-items-end">
                        <div class="col-md-5">
                            <label class="form-label visually-hidden">Material</label>
                            <select name="materialId[0]" asp-items="ViewBag.ListaMateriaisDisponiveis as SelectList" class="form-select material-select">
                                <option value="">-- Selecione o Material --</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label visually-hidden">Quantidade</label>
                            <input name="quantidadeRequisitada[0]" type="number" min="1" class="form-control quantidade-input" placeholder="Qtd." value="1" />
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-danger btn-sm remove-item-btn" title="Remover Item" style="display:none;">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                    </div>
                </div>

                <button type="button" id="add-item-btn" class="btn btn-success btn-sm mt-2 mb-3">
                    <i class="bi bi-plus-circle"></i> Adicionar Outro Material
                </button>

                <div class="form-group mt-4">
                    <button type="submit" class="btn btn-primary">Confirmar Requisição</button>
                    <a asp-controller="Alugar" asp-action="Salas" class="btn btn-secondary ms-2">Cancelar</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const itensContainer = document.getElementById('itens-container');
            const addItemBtn = document.getElementById('add-item-btn');

            const listaMateriaisDisponiveis = @Html.Raw(Json.Serialize(materiaisParaJs));

            function escapeHtml(unsafe) {
                return unsafe
                    .replace(/&/g, "&amp;")
                    .replace(/</g, "&lt;")
                    .replace(/>/g, "&gt;")
                    .replace(/"/g, "&quot;")
                    .replace(/'/g, "&#039;");
            }

            function updateRemoveButtonsVisibility() {
                const itemRows = itensContainer.querySelectorAll('.item-row');
                itemRows.forEach((row, index) => {
                    const removeBtn = row.querySelector('.remove-item-btn');
                    if (removeBtn) {
                        removeBtn.style.display = itemRows.length > 1 ? 'inline-block' : 'none';
                    }
                });
            }

            function updateInputNames() {
                const itemRows = itensContainer.querySelectorAll('.item-row');
                itemRows.forEach((row, index) => {
                    const materialSelect = row.querySelector('.material-select');
                    const quantidadeInput = row.querySelector('.quantidade-input');

                    if (materialSelect) {
                        materialSelect.name = `materialId[${index}]`;
                    }
                    if (quantidadeInput) {
                        quantidadeInput.name = `quantidadeRequisitada[${index}]`;
                    }
                });
            }

            function createItemRowHtml(index) {
                let optionsHtml = '<option value="">-- Selecione o Material --</option>';
                if (Array.isArray(listaMateriaisDisponiveis)) {
                    listaMateriaisDisponiveis.forEach(function (item) {
                        const value = item.value ?? item.Value ?? '';
                        const text = item.text ?? item.Text ?? 'Opção Inválida';
                        optionsHtml += `<option value="${escapeHtml(value)}">${escapeHtml(text)}</option>`;
                    });
                }

                return `
                    <div class="row item-row mb-3 align-items-end">
                        <div class="col-md-5">
                            <label class="form-label visually-hidden">Material</label>
                            <select name="materialId[${index}]" class="form-select material-select">
                                ${optionsHtml}
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label visually-hidden">Quantidade</label>
                            <input name="quantidadeRequisitada[${index}]" type="number" min="1" class="form-control quantidade-input" placeholder="Qtd." value="1"/>
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-danger btn-sm remove-item-btn" title="Remover Item">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                    </div>
                `;
            }

            addItemBtn.addEventListener('click', function () {
                const currentRowCount = itensContainer.querySelectorAll('.item-row').length;
                itensContainer.insertAdjacentHTML('beforeend', createItemRowHtml(currentRowCount));
                updateRemoveButtonsVisibility();
            });

            itensContainer.addEventListener('click', function (e) {
                const removeButton = e.target.closest('.remove-item-btn');
                if (removeButton) {
                    removeButton.closest('.item-row').remove();
                    updateRemoveButtonsVisibility();
                    updateInputNames();
                }
            });

            updateInputNames();
            updateRemoveButtonsVisibility();
        });
    </script>
}
