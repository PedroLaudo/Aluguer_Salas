@model IEnumerable<Aluguer_Salas.Models.Reserva>
@* O modelo principal é uma lista de Reservas *@
@{
    ViewData["Title"] = "O Meu Perfil";
    var currentUser = ViewData["CurrentUtilizador"] as Aluguer_Salas.Models.Utilizador;
    var statusMessage = ViewData["StatusMessage"] as string;
    var errorMessage = ViewData["ErrorMessage"] as string;
}

@* ... resto do seu Views/Perfil/Index.cshtml ... *@

<h1>@ViewData["Title"]</h1>

@* Exibir mensagens de status/erro do ViewData *@
@if (!string.IsNullOrEmpty(statusMessage))
{
    <div class="alert alert-success alert-dismissible fade show mt-3" role="alert">
        @Html.Raw(statusMessage)
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
        @Html.Raw(errorMessage)
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (currentUser != null)
{
    <div class="card mb-4">
        <div class="card-header">
            Informações do Utilizador
        </div>
        <div class="card-body">
            <h5 class="card-title">@currentUser.Nome</h5>
            <p class="card-text"><strong>Email:</strong> @currentUser.Email</p>
            @if (!string.IsNullOrEmpty(currentUser.PhoneNumber))
            {
                <p class="card-text"><strong>Telefone:</strong> @currentUser.PhoneNumber</p>
            }
        </div>
    </div>
}
else
{
    <div class="alert alert-warning">Não foi possível carregar os dados do utilizador.</div>
}

<h2>As Minhas Reservas</h2>

@if (Model != null && Model.Any()) @* Model aqui é IEnumerable<Reserva> *@
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Sala</th>
                    <th>Data</th>
                    <th>Hora de Início</th>
                    <th>Hora de Fim</th>
                    <th>Estado</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var reserva in Model) @* Iterar sobre Model (a lista de reservas) *@
                {
                    <tr>
                        <td>@(reserva.Sala?.NomeSala ?? "N/A")</td>
                        <td>@reserva.Data.ToShortDateString()</td>
                        <td>@reserva.HoraInicio.ToShortTimeString()</td>
                        <td>@reserva.HoraFim.ToShortTimeString()</td>
                        <td>@Html.DisplayFor(modelItem => reserva.Status)</td>
                        <td>
                            @if (reserva.HoraInicio > DateTime.Now &&
                                 (reserva.Status?.Equals("Confirmada", StringComparison.OrdinalIgnoreCase) == true ||
                                  reserva.Status?.Equals("Pendente", StringComparison.OrdinalIgnoreCase) == true))
                            {
                                <form asp-controller="Perfil" asp-action="CancelarReserva" method="post" class="d-inline">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="idReserva" value="@reserva.IdReserva" />
                                    <button type="submit"
                                            class="btn btn-danger btn-sm"
                                            title="Remover esta reserva"
                                            onclick="return confirm('Tem a certeza que deseja remover esta reserva? Esta ação não pode ser desfeita.');">
                                        <i class="bi bi-trash"></i> Remover
                                    </button>
                                </form>
                            }
                            else
                            {
                                @if (reserva.Status?.Equals("Cancelada", StringComparison.OrdinalIgnoreCase) == true ||
                                     reserva.Status?.Equals("Removida", StringComparison.OrdinalIgnoreCase) == true)
                                {
                                    <span class="badge bg-secondary">Cancelada/Removida</span>
                                }
                                else if (reserva.Status?.Equals("Concluída", StringComparison.OrdinalIgnoreCase) == true)
                                {
                                    <span class="badge bg-success">Concluída</span>
                                }
                                else if (reserva.HoraInicio <= DateTime.Now)
                                {
                                    <span class="badge bg-info">Passada</span>
                                }
                                else
                                {
                                    <span class="text-muted small">Não removível</span>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-info">
        Não tem reservas efetuadas. Gostaria de
        <a asp-controller="Alugar" asp-action="Salas" class="alert-link">alugar uma sala</a>?
    </div>

}

<div class="mt-4">
    <a asp-area="Identity" asp-page="/Account/Manage/Index" class="btn btn-secondary">Gerir Conta (Identity)</a>
</div>